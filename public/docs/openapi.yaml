openapi: 3.0.3
info:
  title: 'Knowledge Management System API'
  description: 'This documentation aims to provide all the information you need to work with our API.'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/articles:
    get:
      summary: 'Get a list of articles'
      operationId: getAListOfArticles
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: ''
                  example: 12
                  nullable: false
                per_page:
                  type: integer
                  description: ''
                  example: 15
                  nullable: false
                search:
                  type: string
                  description: ''
                  example: ut
                  nullable: true
              required:
                - page
                - per_page
    post:
      summary: 'Create a new article'
      operationId: createANewArticle
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: autem
                  nullable: false
                content:
                  type: string
                  description: ''
                  example: in
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: draft
                  nullable: false
                  enum:
                    - draft
                    - published
              required:
                - title
                - content
                - status
  '/api/v1/articles/{id}':
    get:
      summary: 'Get a single article'
      operationId: getASingleArticle
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Article
    put:
      summary: 'Update an article'
      operationId: updateAnArticle
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: repellendus
                  nullable: false
                content:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                status:
                  type: string
                  description: ''
                  example: published
                  nullable: false
                  enum:
                    - draft
                    - published
              required:
                - title
                - content
                - status
    delete:
      summary: 'Delete an article'
      operationId: deleteAnArticle
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Article
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the article.'
        example: dolores
        required: true
        schema:
          type: string
  /api/v1/auth/register:
    post:
      summary: 'Register a new user'
      operationId: registerANewUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qsziywaunolcunptkuyxbvg
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: zaufderhar@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'v),9eaYH*<D{ZQB^m*'
                  nullable: false
                password_confirmation:
                  type: string
                  description: ''
                  example: aut
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/v1/auth/login:
    post:
      summary: 'Login a user'
      operationId: loginAUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: sam.smitham@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: ')=e!f`IhX`9TAeU=8,G-'
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Article
    description: "\nAPIs for managing articles"
  -
    name: Auth
    description: "\nAPIs for managing authentication"
  -
    name: Endpoints
    description: ''
